{"version":3,"sources":["api.js","appStore.js","NavBar.jsx","Beer.jsx","BeerList.jsx","index.js","App.jsx"],"names":["ITEMS_PER_PAGE","api","axios","create","baseURL","fetchBeers","_x","src_api_fetchBeers","apply","this","arguments","_callee","filter","_ref","data","regenerator_default","a","wrap","_context","prev","next","get","params","food","undefined","per_page","sent","forEach","fillImage","abrupt","stop","beer","image_url","indexOf","appStore","store","beers","_fetchBeers","Object","asyncToGenerator","mark","isLoading","view","react_default","createElement","className","lib_default","onRequestSearch","placeholder","autoFocus","LinearProgress_default","name","description","imageUrl","foodPairing","food_pairing","details","Card_default","onClick","CardMedia_default","image","CardContent_default","map","key","length","Beer","assign","ReactDOM","render","react","NavBar","BeerList","document","getElementById"],"mappings":"yNAEMA,EAAiB,GAEjBC,SAAMC,EAAMC,OAAO,CACvBC,QAAS,+BAGJ,SAAeC,EAAtBC,GAAA,OAAAC,EAAAC,MAAAC,KAAAC,sDAAO,SAAAC,EAA2BC,GAA3B,IAAAC,EAAAC,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACkBnB,EAAIoB,IAAI,SAAU,CACvCC,OAAQ,CACNC,KAAMX,QAAUY,EAChBC,SAAUzB,KAJT,cAAAa,EAAAK,EAAAQ,MACGZ,EADHD,EACGC,MAMHa,QAAQC,GAPRV,EAAAW,OAAA,SAQEf,GARF,wBAAAI,EAAAY,SAAAnB,6BAWP,SAASiB,EAAWG,GACbA,EAAKC,YAAoD,IAAvCD,EAAKC,UAAUC,QAAQ,aAC5CF,EAAKC,UACH,wGClBN,IAAME,EAAWC,YAAM,CACrBC,MAAO,GACD/B,WAFe,eAAAgC,EAAAC,OAAAC,EAAA,EAAAD,CAAAvB,EAAAC,EAAAwB,KAAA,SAAA7B,EAEHC,GAFG,OAAAG,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAGnBc,EAASO,WAAY,EAHFvB,EAAAE,KAAA,EAIInB,EAAeW,GAJnB,OAInBsB,EAASE,MAJUlB,EAAAQ,KAKnBQ,EAASO,WAAY,EALF,wBAAAvB,EAAAY,SAAAnB,MAAA,gBAAAL,GAAA,OAAA+B,EAAA7B,MAAAC,KAAAC,YAAA,KASRwB,ICNAQ,cAAK,kBAClBC,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,aACbF,EAAA3B,EAAA4B,cAACE,EAAA9B,EAAD,CACE+B,gBAAiBb,EAAS7B,WAC1B2C,YAAY,oBACZC,WAAS,IAEVf,EAASO,WAAaE,EAAA3B,EAAA4B,cAACM,EAAAlC,EAAD,4DCPZ0B,cACb,SAAA7B,GAA2E,IAAxEsC,EAAwEtC,EAAxEsC,KAAMC,EAAkEvC,EAAlEuC,YAAwBC,EAA0CxC,EAArDmB,UAAmCsB,EAAkBzC,EAAhC0C,aACnCxB,EAAOI,YAAM,CAAEqB,SAAS,IAE9B,OACEb,EAAA3B,EAAA4B,cAACa,EAAAzC,EAAD,CAAM0C,QAAS,kBAAO3B,EAAKyB,SAAWzB,EAAKyB,SAAUX,UAAU,SAC3Dd,EAAKyB,SAAWb,EAAA3B,EAAA4B,cAACe,EAAA3C,EAAD,CAAW4C,MAAOP,EAAUR,UAAU,UACxDF,EAAA3B,EAAA4B,cAACiB,EAAA7C,EAAD,KACE2B,EAAA3B,EAAA4B,cAAA,UAAKO,GACJpB,EAAKyB,QACJb,EAAA3B,EAAA4B,cAAA,SAAIQ,GAEJT,EAAA3B,EAAA4B,cAAA,UACGU,EAAYQ,IAAI,SAAAvC,GAAI,OACnBoB,EAAA3B,EAAA4B,cAAA,MAAImB,IAAKxC,GAAOA,UCfjBmB,cAAK,kBAClBC,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,YACXX,EAASE,MAAM4B,OAGf9B,EAASE,MAAM0B,IAAI,SAAA/B,GAAI,OAAIY,EAAA3B,EAAA4B,cAACqB,EAAD3B,OAAA4B,OAAA,CAAMH,IAAKhC,EAAKoB,MAAUpB,MAFrDY,EAAA3B,EAAA4B,cAAA,yCCJNuB,IAASC,OAAOzB,EAAA3B,EAAA4B,cCCD,kBACbD,EAAA3B,EAAA4B,cAACyB,EAAA,SAAD,KACE1B,EAAA3B,EAAA4B,cAAC0B,EAAD,MACA3B,EAAA3B,EAAA4B,cAAC2B,EAAD,QDJY,MAASC,SAASC,eAAe","file":"static/js/main.6b394069.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst ITEMS_PER_PAGE = 30\n\nconst api = axios.create({\n  baseURL: 'https://api.punkapi.com/v2'\n})\n\nexport async function fetchBeers (filter) {\n  const { data } = await api.get('/beers', {\n    params: {\n      food: filter || undefined,\n      per_page: ITEMS_PER_PAGE\n    }\n  })\n  data.forEach(fillImage)\n  return data\n}\n\nfunction fillImage (beer) {\n  if (!beer.image_url || beer.image_url.indexOf('keg.png') !== -1) {\n    beer.image_url =\n      'http://www.patternpictures.com/wp-content/uploads/2015/11/PP07301706-Close-up-of-draft-beer-foam.jpg'\n  }\n}\n","import { store } from 'react-easy-state'\nimport * as api from './api'\n\n// use 'appStore' instead of 'this' in the store methods to make them passable as callbacks\nconst appStore = store({\n  beers: [],\n  async fetchBeers (filter) {\n    appStore.isLoading = true\n    appStore.beers = await api.fetchBeers(filter)\n    appStore.isLoading = false\n  }\n})\n\nexport default appStore\n","import React from 'react'\nimport { view } from 'react-easy-state'\nimport SearchBar from 'material-ui-search-bar'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport appStore from './appStore'\n\n// this is re-rendered whenever the relevant parts of the used data stores change\nexport default view(() => (\n  <div className='searchbar'>\n    <SearchBar\n      onRequestSearch={appStore.fetchBeers}\n      placeholder='Add some food ...'\n      autoFocus\n    />\n    {appStore.isLoading && <LinearProgress />}\n  </div>\n))\n","import React from 'react'\nimport { view, store } from 'react-easy-state'\nimport Card from '@material-ui/core/Card'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport CardContent from '@material-ui/core/CardContent'\n\n// this is re-rendered whenever the relevant parts of the used data stores change\nexport default view(\n  ({ name, description, image_url: imageUrl, food_pairing: foodPairing }) => {\n    const beer = store({ details: false })\n\n    return (\n      <Card onClick={() => (beer.details = !beer.details)} className='beer'>\n        {!beer.details && <CardMedia image={imageUrl} className='media' />}\n        <CardContent>\n          <h3>{name}</h3>\n          {beer.details ? (\n            <p>{description}</p>\n          ) : (\n            <ul>\n              {foodPairing.map(food => (\n                <li key={food}>{food}</li>\n              ))}\n            </ul>\n          )}\n        </CardContent>\n      </Card>\n    )\n  }\n)\n","import React from 'react'\nimport { view } from 'react-easy-state'\nimport appStore from './appStore'\nimport Beer from './Beer'\n\n// this is re-rendered whenever the relevant parts of the used data stores change\nexport default view(() => (\n  <div className='beerlist'>\n    {!appStore.beers.length ? (\n      <h3>No matching beers found!</h3>\n    ) : (\n      appStore.beers.map(beer => <Beer key={beer.name} {...beer} />)\n    )}\n  </div>\n))\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","import React, { Fragment } from 'react'\nimport NavBar from './NavBar'\nimport BeerList from './BeerList'\n\n// if a component does not use any store, it doesn't have to be wrapped with view()\n// it is safer to wrap everything with view() until you get more comfortable with Easy State\nexport default () => (\n  <Fragment>\n    <NavBar />\n    <BeerList />\n  </Fragment>\n)\n"],"sourceRoot":""}