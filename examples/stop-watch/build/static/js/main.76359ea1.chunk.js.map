{"version":3,"sources":["clock.js","App.jsx","index.js"],"names":["clock","store","ticks","start","intervalId","setInterval","stop","clearInterval","time","moment","millisecond","seconds","format","fraction","isTicking","undefined","toggle","reset","view","label","react_default","a","createElement","onClick","ReactDOM","render","App","document","getElementById"],"mappings":"6NAIMA,EAAQC,YAAM,CAClBC,MAAO,EACPC,MAFkB,WAGhBH,EAAMI,WAAaC,YAAY,kBAAML,EAAME,SAAS,KAEtDI,KALkB,WAMhBN,EAAMI,WAAaG,cAAcP,EAAMI,aAEzCI,WACE,IAAMA,EAAOC,IAAO,GAAGC,YAA0B,GAAdV,EAAME,OAEzC,MAAO,CACLS,QAASH,EAAKI,OAAO,SACrBC,SAAUL,EAAKI,OAAO,QAG1BE,gBACE,YAA4BC,IAArBf,EAAMI,YAEfY,OAnBkB,WAoBhBhB,EAAMc,UAAYd,EAAMM,OAASN,EAAMG,SAEzCc,MAtBkB,WAuBhBjB,EAAME,MAAQ,EACdF,EAAMM,UAIKN,IC3BAkB,cAAK,WAAM,IAChBV,EAAmCR,EAAnCQ,KAAMQ,EAA6BhB,EAA7BgB,OAAQC,EAAqBjB,EAArBiB,MAChBE,EADqCnB,EAAdc,UACH,OAAS,QAEnC,OACEM,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACGd,EAAKG,QACNS,EAAAC,EAAAC,cAAA,aAAQd,EAAKK,WAEfO,EAAAC,EAAAC,cAAA,UAAQC,QAASP,GAASG,GAC1BC,EAAAC,EAAAC,cAAA,UAAQC,QAASN,GAAjB,YCXNO,IAASC,OAAOL,EAAAC,EAAAC,cAACI,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.76359ea1.chunk.js","sourcesContent":["import { store } from 'react-easy-state'\nimport moment from 'moment'\n\n// use 'clock' instead of 'this' in the store methods to make them passable as callbacks\nconst clock = store({\n  ticks: 0,\n  start () {\n    clock.intervalId = setInterval(() => clock.ticks++, 10)\n  },\n  stop () {\n    clock.intervalId = clearInterval(clock.intervalId)\n  },\n  get time () {\n    const time = moment(0).millisecond(clock.ticks * 10)\n\n    return {\n      seconds: time.format('mm:ss'),\n      fraction: time.format('SS')\n    }\n  },\n  get isTicking () {\n    return clock.intervalId !== undefined\n  },\n  toggle () {\n    clock.isTicking ? clock.stop() : clock.start()\n  },\n  reset () {\n    clock.ticks = 0\n    clock.stop()\n  }\n})\n\nexport default clock\n","import React from 'react'\nimport { view } from 'react-easy-state'\nimport clock from './clock'\n\n// this is re-rendered whenever the relevant parts of the used data stores change\nexport default view(() => {\n  const { time, toggle, reset, isTicking } = clock\n  const label = isTicking ? 'Stop' : 'Start'\n\n  return (\n    <div>\n      <div>\n        {time.seconds}\n        <small>{time.fraction}</small>\n      </div>\n      <button onClick={toggle}>{label}</button>\n      <button onClick={reset}>Reset</button>\n    </div>\n  )\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}