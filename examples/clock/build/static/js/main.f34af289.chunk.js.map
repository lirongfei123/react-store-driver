{"version":3,"sources":["App.jsx","index.js"],"names":["getFormattedTime","moment","utc","format","view","clock","store","time","useEffect","id","setInterval","clearInterval","react_default","a","createElement","ReactDOM","render","App","document","getElementById"],"mappings":"4NAIA,SAASA,IACP,OAAOC,MACJC,MACAC,OAAO,cAIGC,kBAAK,WAElB,IAAMC,EAAQC,YAAM,CAClBC,KAAMP,MAQR,OALAQ,oBAAU,WACR,IAAMC,EAAKC,YAAY,kBAAOL,EAAME,KAAOP,KAAqB,KAChE,OAAO,kBAAMW,cAAcF,KAC1B,IAEIG,EAAAC,EAAAC,cAAA,WAAMT,EAAME,QCjBrBQ,IAASC,OAAOJ,EAAAC,EAAAC,cAACG,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.f34af289.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\nimport moment from 'moment'\nimport { view, store } from 'react-easy-state'\n\nfunction getFormattedTime () {\n  return moment()\n    .utc()\n    .format('hh:mm:ss A')\n}\n\n// this is re-rendered whenever the relevant parts of the used data stores change\nexport default view(() => {\n  // create a local store which is NOT shared between component instances\n  const clock = store({\n    time: getFormattedTime()\n  })\n\n  useEffect(() => {\n    const id = setInterval(() => (clock.time = getFormattedTime()), 1000)\n    return () => clearInterval(id)\n  }, [])\n\n  return <div>{clock.time}</div>\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}